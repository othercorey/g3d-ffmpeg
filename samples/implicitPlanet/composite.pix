#version 400
// Composite and temporal blur shader
// by Morgan McGuire, @CasualEffects, http://casual-effects.com
#include "common.glsl"

uniform sampler2D planetTexture;
uniform sampler2D cloudTexture;
uniform sampler2D previousFrameTexture;

out Color4 fragColor;

void main() {
    vec2 invResolution = 1.0 / iResolution.xy;
    float mouseSpeed = maxComponent(abs(iMouseVelocity));
    
    // Increase blur constants when small because the screen-space derivatives
    // will be unstable at that scale. Both are on [0, 1]
    float hysteresis    = (mouseSpeed > 1.0) ? 0.0 :
        (iResolution.x > 600.0) ? 0.9 : 0.95;
    /*
    if (length(gl_FragCoord.xy * invResolution - 0.5) > 0.4) {
        // Reduce hysteresis outside planet
       hysteresis *= 0.1;
    }
    */
    float spatialBlur   = (iResolution.x > 600.0) ? 0.70 : 0.90;

    // TODO: texelFetch
    vec3 planet = texture(planetTexture, (gl_FragCoord.xy + spatialBlur * 0.5) * invResolution).rgb;
    vec3 dst    = texture(previousFrameTexture, gl_FragCoord.xy * invResolution).rgb;

    // Upsample clouds from 1/3 resolution
    vec4 clouds = texture(cloudTexture, gl_FragCoord.xy * invResolution);
    
	fragColor.rgb = mix(planet * (1.0 - clouds.a) + clouds.rgb, dst, hysteresis);
 
}
